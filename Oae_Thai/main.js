import puppeteer from "puppeteer";
import * as cheerio from "cheerio";
import axios from "axios";
import fs from "fs-extra";
import path from "path";

const BASE = "https://oae.go.th";
const MAIN_URL = `${BASE}/home/article/475`;
const SAVE_DIR = "./reports";

// ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ blacklist (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏û‡∏∑‡∏ä‡∏ú‡∏•)
const blacklist = [
  "‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥",
  "‡∏ß‡∏¥‡∏™‡∏±‡∏¢‡∏ó‡∏±‡∏®‡∏ô‡πå",
  "‡∏û‡∏±‡∏ô‡∏ò‡∏Å‡∏¥‡∏à",
  "‡∏ú‡∏π‡πâ‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£",
  "‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£",
  "‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö",
  "‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì",
  "‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏á‡∏≤‡∏ô",
  "‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô‡∏†‡∏≤‡∏¢‡πÉ‡∏ô",
  "‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÄ‡∏ú‡∏¢‡πÅ‡∏û‡∏£‡πà",
  "‡∏Ç‡πà‡∏≤‡∏ß",
  "‡∏ñ‡∏≤‡∏°-‡∏ï‡∏≠‡∏ö",
  "OIT",
  "‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤",
  "‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£",
  "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏®‡∏£‡∏©‡∏ê‡∏Å‡∏¥‡∏à",
  "‡∏Å‡∏é",
  "‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢",
  "‡∏Ç‡πà‡∏≤‡∏ß‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå",
  "‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®",
  "‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏ã‡∏∑‡πâ‡∏≠‡∏à‡∏±‡∏î‡∏à‡πâ‡∏≤‡∏á"
];

// üîπ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å
async function scrapeOAE() {
  const browser = await puppeteer.launch({
    headless: true,
    args: ["--no-sandbox", "--disable-setuid-sandbox"],
  });

  const page = await browser.newPage();
  console.log(`üåê ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏´‡∏•‡∏±‡∏Å: ${MAIN_URL}`);
  await page.goto(MAIN_URL, { waitUntil: "networkidle2", timeout: 0 });

  // ‚úÖ ‡∏£‡∏≠‡πÉ‡∏´‡πâ Angular ‡πÇ‡∏´‡∏•‡∏î‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏û‡∏∑‡∏ä‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  await page.waitForSelector("app-root a[href^='/home/article/']", { timeout: 20000 });
  const html = await page.content();
  const $ = cheerio.load(html);

  const plantLinks = [];
  $("a[href^='/home/article/']").each((i, el) => {
    const href = $(el).attr("href");
    const name = $(el).text().trim();

    // ‡∏Ç‡πâ‡∏≤‡∏°‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
    if (!href || !name || href.includes("/home/article/475")) return;

    const isBlacklisted = blacklist.some((word) => name.includes(word));
    if (isBlacklisted) {
      console.log(`üö´ ‡∏Ç‡πâ‡∏≤‡∏°‡∏•‡∏¥‡∏á‡∏Å‡πå: ${name}`);
      return;
    }

    plantLinks.push({ name, url: BASE + href });
  });

  console.log(`\nüåæ ‡∏û‡∏ö‡∏û‡∏∑‡∏ä‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${plantLinks.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
  console.table(plantLinks);

  // üîÅ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏û‡∏∑‡∏ä‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏ô‡∏¥‡∏î
  for (const { name, url } of plantLinks) {
    console.log(`\nüîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤: ${name} (${url})`);
    try {
      await scrapePlantPDFs(browser, name, url);
    } catch (err) {
      console.warn(`‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Å‡∏±‡∏ö ${name}: ${err.message}`);
    }
  }

  await browser.close();
  console.log("\n‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå! ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏û‡∏∑‡∏ä‡πÅ‡∏•‡πâ‡∏ß");
}

// üîπ ‡∏î‡∏∂‡∏á PDF ‡∏Ç‡∏≠‡∏á‡∏û‡∏∑‡∏ä‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏ô‡∏¥‡∏î
async function scrapePlantPDFs(browser, plantName, plantUrl) {
  const page = await browser.newPage();
  await page.goto(plantUrl, { waitUntil: "networkidle2", timeout: 0 });

  try {
    await page.waitForSelector("app-root a[href$='.pdf']", { timeout: 15000 });
  } catch {
    console.warn(`‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ PDF ‡πÉ‡∏ô ${plantName}`);
    await page.close();
    return;
  }

  const html = await page.content();
  const $ = cheerio.load(html);

  const pdfLinks = [];
  $("a[href$='.pdf']").each((i, el) => {
    const link = $(el).attr("href");
    const file = decodeURIComponent(link.split("/").pop());
    const yearMatch = file.match(/(20\d{2}|25\d{2})/);
    const year = yearMatch ? yearMatch[0] : "unknown";
    pdfLinks.push({
      file,
      url: link.startsWith("http") ? link : BASE + link,
      year,
    });
  });

  console.log(`üìÑ ‡∏û‡∏ö PDF ${pdfLinks.length} ‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö "${plantName}"`);
  await downloadPDFs(plantName, pdfLinks);
  await page.close();
}

// üîπ ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î PDF ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
async function downloadPDFs(plantName, pdfs) {
  const dir = path.join(SAVE_DIR, plantName);
  await fs.ensureDir(dir);

  for (const { file, url } of pdfs) {
    const filePath = path.join(dir, file);
    if (fs.existsSync(filePath)) {
      console.log(`üü¢ ‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡πâ‡∏ß: ${file}`);
      continue;
    }

    console.log(`‚¨áÔ∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î: ${file}`);
    try {
      const res = await axios.get(url, { responseType: "arraybuffer" });
      fs.writeFileSync(filePath, res.data);
    } catch (err) {
      console.error(`‚ùå ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${file} (${err.message})`);
    }
  }
}

// üîπ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏±‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°
scrapeOAE();
